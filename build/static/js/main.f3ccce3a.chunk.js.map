{"version":3,"sources":["components/card/Card.js","firebase.js","redux/charsDuck.js","components/home/HomePage.js","components/favs/FavPage.js","redux/userDuck.js","components/login/LoginPage.js","Routes.js","App.js","serviceWorker.js","redux/store.js","index.js","components/card/card.module.css","components/home/home.module.css","components/favs/favs.module.css","components/login/login.module.css"],"names":["onClick","side","console","log","Card","name","image","rightClick","leftClick","hide","className","styles","container","card","alt","src","actions","left","size","right","defaultProps","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","collection","initialData","fetching","charsArr","current","favorites","nextPage","client","ApolloClient","uri","GET_CHARACTERS","GET_CHARACTERS_SUCCESS","GET_CHARACTERS_ERROR","REMOVE_CHARACTER","ADD_TO_FAVORITES","GET_FAVS","GET_FAVS_SUCCESS","GET_FAVS_ERROR","GET_FAVS_LOCALE","UPDATE_PAGE","restoreFavoritesAction","dispatch","storage","localStorage","getItem","JSON","parse","user","type","payload","characters","retrieveFavs","getState","uid","doc","get","then","snap","data","favoritos","getFavs","array","catch","err","message","getCharactersAction","query","gql","variables","pake","res","results","info","next","connect","state","chars","removeCharacterAction","shift","length","addToFavsAction","char","push","set","updateDB","nextCharacter","faveCharacter","renderCharacter","map","i","key","LOGIN","LOGIN_SUCCESS","LOGIN_SUCCESS_LOCALE","LOGIN_ERROR","LOGOUT","loggedIn","restoreSessionAction","doGoogleLoginAction","provider","auth","GoogleAuthProvider","signInWithPopup","loginWithGoogle","displayName","email","photoURL","x","stringify","logOutAction","signOut","removeItem","PrivateRoute","component","path","rest","to","exact","Home","FavPage","LoginPage","App","activeClassName","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","error","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","generateStore","WithRouter","WithStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f3ccce3a.chunk.js","sourcesContent":["import React from 'react'\nimport styles from './card.module.css'\nimport FontAwesome from 'react-fontawesome'\nimport PropTypes from 'prop-types'\n\nlet rick = \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\"\n\nfunction onClick(side) {\n    return () => console.log(side)\n}\n\nexport default function Card({\n    name, image, rightClick, leftClick, hide\n}) {\n    return (\n        <div className={styles.container}>\n            <div className={styles.card}>\n                <img alt=\"rick\" src={image} />\n                <p className={styles.name}>\n                    {name}\n                </p>\n                {!hide&&<div className={styles.actions}>\n                    <div\n                        onClick={leftClick || onClick(\"left\")}\n                        className={styles.left}>\n                        <FontAwesome\n                            name=\"thumbs-down\"\n                            size=\"2x\"\n                        />\n                    </div>\n                    <div\n                        onClick={rightClick || onClick(\"right\")}\n                        className={styles.right}>\n                        <FontAwesome\n                            name=\"heart\"\n                            size=\"2x\"\n                        />\n                    </div>\n                </div>}\n            </div>\n        </div>\n    )\n}\n\nCard.propTypes = {\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    leftClick: PropTypes.func,\n    rightClick: PropTypes.func,\n}\n\nCard.defaultProps = {\n    name: \"Rick Sanches\",\n    image: rick,\n}","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAdJqmdvKke5vHO4KohIcftvqO2Hc5O7I4\",\n    authDomain: \"react-redux-graphql-test.firebaseapp.com\",\n    databaseURL: \"https://react-redux-graphql-test.firebaseio.com\",\n    projectId: \"react-redux-graphql-test\",\n    storageBucket: \"react-redux-graphql-test.appspot.com\",\n    messagingSenderId: \"715549641202\",\n    appId: \"1:715549641202:web:67688164d77364be50436b\",\n    measurementId: \"G-E71TYQMXJH\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  let db = firebase.firestore().collection('favs')\n\n  export function getFavs(uid){\n    return db.doc(uid).get()\n      .then(snap => snap.data().favoritos)\n  }\n\n  export function updateDB(array,uid){\n    return db.doc(uid).set({favoritos:[...array]})\n  }\n//   firebase.analytics();\n\n  export function loginWithGoogle(){\n      let provider = new firebase.auth.GoogleAuthProvider()\n      return firebase.auth().signInWithPopup(provider)\n      .then(snap => snap.user)\n  }\n\n  export function signOutGoogle(){\n      firebase.auth().signOut()\n  }","import axios from 'axios'\nimport { updateDB, getFavs} from './../firebase'\nimport ApolloClient, { gql } from 'apollo-boost'\n// Const\nconst initialData= {\n    fetching:false,\n    charsArr:[],\n    current:{},\n    favorites:[],\n    nextPage:1\n}\n\nconst URL = \"https://rickandmortyapi.com/api/character\"\n\nlet client = new ApolloClient({\n    uri:\"https://rickandmortyapi.com/graphql\"\n})\n\nconst GET_CHARACTERS = \"GET_CHARACTERS\"\nconst GET_CHARACTERS_SUCCESS = \"GET_CHARACTERS_SUCCESS\"\nconst GET_CHARACTERS_ERROR = \"GET_CHARACTERS_ERROR\"\n\nconst REMOVE_CHARACTER = \"REMOVE_CHARACTER\"\nconst ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\"\n\nconst GET_FAVS = \"GET_FAVS\"\nconst GET_FAVS_SUCCESS = \"GET_FAVS_SUCCESS\"\nconst GET_FAVS_ERROR = \"GET_FAVS_ERROR\"\n\nconst GET_FAVS_LOCALE = \"GET_FAVS_LOCALE\"\nconst UPDATE_PAGE = \"UPDATE_PAGE\"\n\n// Reducers\n\nexport default function reducer(state = initialData, action){\n    switch(action.type){\n        case GET_CHARACTERS:\n            return {...state, fetching: true}\n        case GET_CHARACTERS_ERROR:\n            return {...state, fetching: false, error: action.payload}\n        case GET_CHARACTERS_SUCCESS:\n            return {...state, charsArr: action.payload, fetching:false}\n        case REMOVE_CHARACTER:\n            return {...state, charsArr:action.payload}\n        case ADD_TO_FAVORITES:\n            return {...state, ...action.payload}\n        case GET_FAVS:\n            return {...state, fetching:true}\n        case GET_FAVS_ERROR:\n            return {...state, fetching: false, error: action.payload}\n        case GET_FAVS_SUCCESS:\n            return {...state, favorites: action.payload, fetching:false}\n        case GET_FAVS_LOCALE:\n            return {...state, fetching:false , favorites: action.payload}\n        case UPDATE_PAGE:\n            return {...state, nextPage: action.payload}\n        default:\n            return state\n    }\n}\n\n// actions (thunks)\n\nexport let restoreFavoritesAction = () => dispatch => {\n    let storage = localStorage.getItem('storage')\n    storage = JSON.parse(storage)\n\n    if(storage && storage.user) dispatch({type:GET_FAVS_LOCALE,payload:storage.characters.favorites}) \n}\n\nexport let retrieveFavs = () => (dispatch,getState) => {\n    dispatch({\n        type:GET_FAVS\n    })\n\n    let {uid} = getState().user\n\n    return getFavs(uid)\n        .then( array => dispatch({\n                type:GET_FAVS_SUCCESS,\n                payload:[...array]\n            })\n        )\n        \n        .catch( err => {\n            console.log(err)\n            dispatch({\n                type:GET_FAVS_ERROR,\n                payload:err.message\n            })\n        })\n}\n\nexport let addToFavsAction = () => (dispatch,getState) => {\n    let {charsArr,favorites} = getState().characters\n    let {uid} = getState().user\n    let char = charsArr.shift()\n    favorites.push(char)\n    updateDB(favorites,uid)\n    dispatch({\n        type:ADD_TO_FAVORITES,\n        payload:{ charsArr:[...charsArr], favorites:[...favorites]}\n    })\n}\n\nexport let removeCharacterAction = () => (dispatch, getState) => {\n    let {charsArr} = getState().characters\n    charsArr.shift()\n    if(!charsArr.length){\n        getCharactersAction()(dispatch,getState)\n    }\n    dispatch({\n        type: REMOVE_CHARACTER,\n        payload: [...charsArr]\n    })\n}\n\nexport const getCharactersAction= () => (dispatch, getState) => {\n\n    let query = gql`\n        query ($pake:Int){\n            characters(page:$pake){\n            info{\n                pages\n                next\n                prev\n            }\n            results{\n                name\n                image\n            }\n            }\n        }\n    `\n\n    dispatch({type:GET_CHARACTERS})\n\n    let {nextPage} = getState().characters\n\n    return client.query({query,variables:{pake:nextPage}})\n    .then(res => {\n        dispatch({type: GET_CHARACTERS_SUCCESS, payload: res.data.characters.results})\n        dispatch({type: UPDATE_PAGE, payload: res.data.characters.info.next ? res.data.characters.info.next : 1})\n    })\n    .catch(err => dispatch({type:GET_CHARACTERS_ERROR,payload:err}))\n\n\n    // return axios.get(URL)\n    //     .then(res => dispatch({type:GET_CHARACTERS_SUCCESS,payload:res.data.results}))\n    //     .catch(err => dispatch({type:GET_CHARACTERS_ERROR,payload:err}))\n        \n}\n","import React from 'react'\nimport Card from '../card/Card'\nimport styles from './home.module.css'\nimport { connect } from 'react-redux'\nimport {removeCharacterAction,addToFavsAction} from './../../redux/charsDuck'\n\n\nconst Home = ({chars, removeCharacterAction, addToFavsAction}) => {\n\n\n    const renderCharacter = () => {\n         let char = chars[0]\n        return (\n            <Card leftClick={nextCharacter} rightClick={faveCharacter} {...char}/>\n        )\n    }\n\n    const nextCharacter = () => {\n        removeCharacterAction()\n    }\n\n    const faveCharacter = () => {\n        addToFavsAction()\n    }\n\n    return (\n        <div className={styles.container}>\n            <h2>Personajes de Rick y Morty</h2>\n            <div>\n                {renderCharacter()}\n            </div>\n        </div>\n    )\n}\n\nconst mapState = (state) => {\n    return {\n        chars:state.characters.charsArr\n    }\n}\n\nexport default connect(mapState, {removeCharacterAction,addToFavsAction})(Home)\n\n","import React from 'react'\nimport styles from './favs.module.css'\nimport Card from '../card/Card'\nimport { connect } from 'react-redux'\n\nfunction FavPage({ characters = [0] }) {\n    function renderCharacter(char, i) {\n        return (\n            <Card hide {...char} key={i} />\n        )\n    }\n    return (\n        <div className={styles.container}>\n            <h2>Favoritos</h2>\n            {characters.map(renderCharacter)}\n            {!characters.length && <h3>No hay personajes agregados</h3>}\n        </div>\n    )\n}\n\nfunction mapState({characters}){\n    return {\n        characters:characters.favorites\n    }\n}\n\nexport default connect(mapState)(FavPage)","import { loginWithGoogle, signOutGoogle} from '../firebase'\nimport { retrieveFavs } from './charsDuck'\n// Const\nconst LOGIN = \"LOGIN\"\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nconst LOGIN_SUCCESS_LOCALE= \"LOGIN_SUCCESS_LOCALE\"\nconst LOGIN_ERROR = \"LOGIN_ERROR\"\nconst LOGOUT = \"LOGOUT\"\n\nlet initialData= {\n    fetching:false,\n    loggedIn: false\n}\n\n// Reducers\n\nexport default function reducer(state = initialData, action){\n    switch(action.type){\n        case LOGIN:\n            return {...state, fetching:true}\n        case LOGIN_SUCCESS:\n            return {...state, fetching:false, loggedIn:true, ...action.payload}\n        case LOGIN_SUCCESS_LOCALE:\n            return {...state, fetching:false, loggedIn:true, ...action.payload}\n        case LOGIN_ERROR:\n            return {...state, fetching:false, error:action.payload}\n        case LOGOUT:\n            return {...initialData}\n        default:\n            return state\n    }\n}\n\n//aux\nconst saveStorage = storage => {\n    localStorage.storage = JSON.stringify(storage)\n}\n\nconst deleteStorage = () => localStorage.removeItem('storage')\n// action\n\nexport let restoreSessionAction = () => dispatch => {\n    let storage = localStorage.getItem('storage')\n    storage = JSON.parse(storage)\n\n    if(storage && storage.user) dispatch({type:LOGIN_SUCCESS_LOCALE,payload:storage.user}) \n}\n\nexport let doGoogleLoginAction = () => (dispatch,getState) => {\n    dispatch({type:LOGIN})\n    return loginWithGoogle()\n    .then(user => {\n        dispatch({type:LOGIN_SUCCESS,payload:{\n            uid:user.uid,\n            displayName:user.displayName,\n            email:user.email,\n            photoURL:user.photoURL\n        }})\n        \n    })\n    .then(x => retrieveFavs()(dispatch,getState))\n    .then(x => saveStorage(getState()))\n    .catch(err=>{\n        console.log(err)\n        dispatch({type:LOGIN_ERROR,payload:err.message})\n    })\n}\n\nexport let logOutAction = () => (dispatch,getState) => {\n    signOutGoogle()\n    dispatch({\n        type: LOGOUT\n    })\n    deleteStorage()\n}","import React from 'react'\nimport styles from './login.module.css'\nimport { connect } from 'react-redux'\nimport { doGoogleLoginAction, logOutAction } from './../../redux/userDuck'\n\nconst LoginPage= ({fetching, loggedIn, doGoogleLoginAction,logOutAction}) => {\n\n    function doLogin(){\n        doGoogleLoginAction()\n    }\n\n    function logOut(){\n        logOutAction()\n    }\n\n    if (fetching) return <h2>cargando</h2>\n    return (\n        <div className={styles.container}>\n            {loggedIn?\n                <h1>\n                    Cierra tu sesión\n                </h1>\n            : \n                <h1>\n                    Inicia Sesión con Google\n                </h1>\n            }\n            \n            {loggedIn?\n                <button onClick={logOut}>\n                    Cerrar Sesión \n                </button>\n            :\n                <button onClick={doLogin}>\n                    Iniciar\n                </button>\n            }\n            \n            \n        </div>\n    )\n}\n\nconst mapState = ({user:{fetching, loggedIn}}) => {\n    return {\n        fetching,\n        loggedIn\n    }\n}\n\nexport default connect(mapState,{doGoogleLoginAction,logOutAction})(LoginPage)","import React from 'react'\nimport { Switch, Route, Redirect} from 'react-router-dom'\nimport Home from './components/home/HomePage'\nimport FavPage from './components/favs/FavPage'\nimport LoginPage from './components/login/LoginPage'\nimport { connect } from 'react-redux'\nimport GraphHome from './components/home/GraphHome'\n\nfunction PrivateRoute({loggedIn,component,path, ...rest}){\n\n    if(loggedIn){\n        return <Route path={path} component={component} {...rest}/>\n    }\n    else{\n        return <Redirect to='/login' {...rest}/>\n    }\n}\n\nfunction Routes({loggedIn}) {\n    return (\n        <Switch>\n            <PrivateRoute exact path=\"/\" component={Home} loggedIn={loggedIn}/>\n            <PrivateRoute path=\"/favs\" component={FavPage} loggedIn={loggedIn} />\n            <Route path=\"/login\" component={LoginPage} />\n        </Switch>\n    )\n}\n\nconst mapState = ({user:{loggedIn}}) => {\n    return {\n        loggedIn\n    }\n}\n\nexport default connect(mapState)(Routes)","import React from 'react';\nimport './App.css';\nimport { NavLink } from 'react-router-dom'\nimport Routes from './Routes';\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"nav-bar\">\n        <NavLink className=\"link\" activeClassName=\"active\" exact to=\"/\">\n          Inicio\n        </NavLink>\n        <NavLink className=\"link\" activeClassName=\"active\" to=\"/favs\">\n          Favoritos\n        </NavLink>\n        <NavLink className=\"link\" activeClassName=\"active\" to=\"/login\">\n          Login\n        </NavLink>\n      </div>\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, combineReducers, compose, applyMiddleware} from 'redux'\nimport userReducer, {restoreSessionAction} from './userDuck'\nimport charsReducer,{ getCharactersAction, restoreFavoritesAction} from './charsDuck'\nimport thunk from 'redux-thunk'\n\nlet rootReducer = combineReducers({\n    user:userReducer,\n    characters: charsReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default function generateStore(){\n    let store = createStore(\n        rootReducer, \n        composeEnhancers(applyMiddleware(thunk))\n    )\n    //consiguiendo los personajes por primera vez\n    getCharactersAction()(store.dispatch, store.getState)\n    restoreSessionAction()(store.dispatch)\n    restoreFavoritesAction()(store.dispatch)\n    return store\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, withRouter } from 'react-router-dom'\nimport 'font-awesome/css/font-awesome.css'\nimport { Provider } from 'react-redux'\nimport generateStore from './redux/store'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\n\nlet store = generateStore()\n\nlet client = new ApolloClient({\n    uri:\"https://rickandmortyapi.com/graphql\"\n})\n\nlet WithRouter = () => <BrowserRouter><App /></BrowserRouter>\nlet WithStore = () => <Provider store={store}><WithRouter/></Provider>\nlet WithApollo = () => <ApolloProvider client={client}> <WithStore/></ApolloProvider>\n\nReactDOM.render(<WithApollo />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__3G4Fa\",\"card\":\"card_card__1py-W\",\"name\":\"card_name__31aE7\",\"actions\":\"card_actions__31KML\",\"left\":\"card_left__kmFAA\",\"right\":\"card_right__ikHyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__2grJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"favs_container__1T6OY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__2teO8\"};"],"sourceRoot":""}